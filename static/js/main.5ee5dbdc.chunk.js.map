{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","page1","page2","page3","page4","page5","page6","search","view","handleChange","bind","handleSubmit","handleKeyDown","event","keyCode","this","encode","encodeURIComponent","fetch","then","response","json","data","setState","query","catch","error","console","log","value","target","setTimeout","test1","title","test2","test3","test4","test5","test6","link1","pageid","link2","link3","link4","link5","link6","class","id","href","type","placeholder","onChange","onKeyDown","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5ee5dbdc.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst enterKey = 13;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page1: {},\n      page2: {},\n      page3: {},\n      page4: {},\n      page5: {},\n      page6: {},\n      search: \"\",\n      view: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  handleKeyDown(event) {\n    if (event.keyCode === enterKey) {\n      this.handleSubmit();\n    }\n  }\n\n  handleSubmit(event) {\n    const encode = encodeURIComponent(this.state.search);\n    fetch(\n      `https://en.wikipedia.org/w/api.php?action=query&origin=*&format=json&list=search&srlimit=6&srsearch=${encode}`\n    )\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          page1: data.query.search[0],\n          page2: data.query.search[1],\n          page3: data.query.search[2],\n          page4: data.query.search[3],\n          page5: data.query.search[4],\n          page6: data.query.search[5],\n          view: true\n        })\n      )\n      .catch(error => console.log(error));\n  }\n\n  handleChange(event) {\n    const { value } = event.target;\n    this.setState({\n      search: value\n    });\n    setTimeout(() => {\n      if (this.state.search === \"\") {\n        this.setState({\n          view: false\n        });\n      }\n    }, 100);\n  }\n\n  render() {\n    const test1 = this.state.page1.title;\n    const test2 = this.state.page2.title;\n    const test3 = this.state.page3.title;\n    const test4 = this.state.page4.title;\n    const test5 = this.state.page5.title;\n    const test6 = this.state.page6.title;\n\n    const link1 = \"https://en.wikipedia.org/?curid=\" + this.state.page1.pageid;\n    const link2 = \"https://en.wikipedia.org/?curid=\" + this.state.page2.pageid;\n    const link3 = \"https://en.wikipedia.org/?curid=\" + this.state.page3.pageid;\n    const link4 = \"https://en.wikipedia.org/?curid=\" + this.state.page4.pageid;\n    const link5 = \"https://en.wikipedia.org/?curid=\" + this.state.page5.pageid;\n    const link6 = \"https://en.wikipedia.org/?curid=\" + this.state.page6.pageid;\n\n    var value = this.state.search;\n    const encode = encodeURIComponent(this.state.search);\n    const page1 = this.state.page1;\n\n    return (\n      <div class=\"body\">\n        <p class=\"heading\">\n          {\" \"}\n          Click{\" \"}\n          <a\n            id=\"RandomLink\"\n            href=\"https://en.wikipedia.org/wiki/Special:Random\"\n            target=\"_blank\"\n          >\n            here\n          </a>{\" \"}\n          for a random Wikipedia article\n        </p>\n        <div id=\"input-container\">\n          <input\n            type=\"text\"\n            placeholder=\"search...\"\n            value={this.state.value}\n            onChange={this.handleChange}\n            onKeyDown={this.handleKeyDown}\n          />\n        </div>\n        {this.state.view ? (\n          <div id=\"result-container\">\n            <a href={link1} target=\"_blank\">\n              <p id=\"result1\">{test1}</p>\n            </a>\n            <a href={link2} target=\"_blank\">\n              <p id=\"result2\">{test2}</p>\n            </a>\n            <a href={link3} target=\"_blank\">\n              <p id=\"result3\">{test3}</p>\n            </a>\n            <a href={link4} target=\"_blank\">\n              <p id=\"result4\">{test4}</p>\n            </a>\n            <a href={link5} target=\"_blank\">\n              <p id=\"result5\">{test5}</p>\n            </a>\n            <a href={link6} target=\"blank\">\n              <p id=\"result6\">{test6}</p>\n            </a>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}